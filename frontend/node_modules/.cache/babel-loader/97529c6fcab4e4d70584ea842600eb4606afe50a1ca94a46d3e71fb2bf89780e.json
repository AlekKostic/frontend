{"ast":null,"code":"var _jsxFileName = \"/home/alek/react-net/frontend/src/Pages/CompanyPage/CompanyPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport { CompanyProfile } from '../../company';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyPage = props => {\n  _s();\n  let {\n    ticker\n  } = useParams();\n  const [comapny, setCompany] = useState < CompanyProfile;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"CompanyPage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyPage, \"tbKGoqCwMwcJyNf3AKpWVpFWSh4=\", false, function () {\n  return [useParams];\n});\n_c = CompanyPage;\nexport default CompanyPage;\nvar _c;\n$RefreshReg$(_c, \"CompanyPage\");","map":{"version":3,"names":["React","useState","useParams","CompanyProfile","jsxDEV","_jsxDEV","CompanyPage","props","_s","ticker","comapny","setCompany","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/alek/react-net/frontend/src/Pages/CompanyPage/CompanyPage.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useParams } from 'react-router'\nimport { CompanyProfile } from '../../company';\n\ninterface Props  {}\n\nconst CompanyPage = (props: Props) => {\n  let { ticker } = useParams();\n  const [comapny, setCompany] = useState<CompanyProfile\n  return (\n    <div>CompanyPage</div>\n  )\n}\n\nexport default CompanyPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI/C,MAAMC,WAAW,GAAIC,KAAY,IAAK;EAAAC,EAAA;EACpC,IAAI;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,GAACE,cAAc;EACrD,oBACEE,OAAA;IAAAO,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE1B,CAAC;AAAAR,EAAA,CANKF,WAAW;EAAA,QACEJ,SAAS;AAAA;AAAAe,EAAA,GADtBX,WAAW;AAQjB,eAAeA,WAAW;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}