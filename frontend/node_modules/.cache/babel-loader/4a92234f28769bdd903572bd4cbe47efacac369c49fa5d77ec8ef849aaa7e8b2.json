{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { searchCompanies } from './api';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [portfolioValues, setPortfolioValues] = useState([]);\n  const [searchResult, setSearchResult] = useState([]);\n  const [serverError, setServerError] = useState(\"\");\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n  };\n  const onPortfolioCreate = e => {\n    e.preventDefault();\n    const exist = portfolioValues.find(value => value === e.target[0].value);\n    if (exist) return;\n    const updatedPortfolio = [...portfolioValues, e.target[0].value];\n    setPortfolioValues(updatedPortfolio);\n  };\n  const onPortfolioDelete = e => {\n    e.preventDefault();\n    const removed = portfolioValues.filter(value => {\n      return value !== e.target[0].value;\n    });\n    setPortfolioValues(removed);\n  };\n  const onSearchSubmit = async e => {\n    e.preventDefault();\n    const result = await searchCompanies(search);\n    if (typeof result == \"string\") {\n      setServerError(result);\n    } else if (Array.isArray(result.data)) {\n      setSearchResult(result.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(App, \"xbUBDi7HbCcBqMvYqroExZ/lBzU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","searchCompanies","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","search","setSearch","portfolioValues","setPortfolioValues","searchResult","setSearchResult","serverError","setServerError","handleSearchChange","e","target","value","onPortfolioCreate","preventDefault","exist","find","updatedPortfolio","onPortfolioDelete","removed","filter","onSearchSubmit","result","Array","isArray","data","_c","$RefreshReg$"],"sources":["/home/alek/react-net/frontend/src/App.tsx"],"sourcesContent":["import { ChangeEvent, SyntheticEvent, useState } from 'react';\nimport './App.css';\nimport CardList from './Components/CardList/CardList';\nimport Search from './Components/Search/Search';\nimport ListPortfolio from './Components/Portfolio/ListPortfolio/ListPortfolio';\nimport { CompanySearch } from './company';\nimport { searchCompanies } from './api';\nimport Navbar from './Components/Navbar/Navbar';\nimport Hero from './Components/Hero/Hero';\n\nfunction App() {\n  const[search, setSearch] = useState<string>(\"\");\n  const[portfolioValues, setPortfolioValues] = useState<string[]>([]);\n  const[searchResult, setSearchResult] = useState<CompanySearch[]>([]);\n  const[serverError, setServerError] = useState<string>(\"\");\n\n  const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value)\n  };\n\n  const onPortfolioCreate = (e: any) => {\n    e.preventDefault()\n    const exist = portfolioValues.find((value) => value === e.target[0]. value)\n    if(exist) return;\n    const updatedPortfolio = [...portfolioValues, e.target[0].value]\n    setPortfolioValues(updatedPortfolio)\n  }\n\n  const onPortfolioDelete = (e: any) => {\n    e.preventDefault()\n    const removed = portfolioValues.filter((value) => {\n      return value !== e.target[0].value;\n    })\n    setPortfolioValues(removed);\n  }\n\n  const onSearchSubmit = async(e: SyntheticEvent) =>{\n    e.preventDefault();\n    const result = await searchCompanies(search);\n    if(typeof result == \"string\"){\n      setServerError(result);\n    }else if(Array.isArray(result.data)){\n      setSearchResult(result.data);\n    }\n  };\n  return (\n    <></>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAAsCA,QAAQ,QAAQ,OAAO;AAC7D,OAAO,WAAW;AAKlB,SAASC,eAAe,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAIxC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC/C,MAAK,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAW,EAAE,CAAC;EACnE,MAAK,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAkB,EAAE,CAAC;EACpE,MAAK,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;EAEzD,MAAMgB,kBAAkB,GAAIC,CAAgC,IAAK;IAC/DR,SAAS,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMC,iBAAiB,GAAIH,CAAM,IAAK;IACpCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGZ,eAAe,CAACa,IAAI,CAAEJ,KAAK,IAAKA,KAAK,KAAKF,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAEC,KAAK,CAAC;IAC3E,IAAGG,KAAK,EAAE;IACV,MAAME,gBAAgB,GAAG,CAAC,GAAGd,eAAe,EAAEO,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC;IAChER,kBAAkB,CAACa,gBAAgB,CAAC;EACtC,CAAC;EAED,MAAMC,iBAAiB,GAAIR,CAAM,IAAK;IACpCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,MAAMK,OAAO,GAAGhB,eAAe,CAACiB,MAAM,CAAER,KAAK,IAAK;MAChD,OAAOA,KAAK,KAAKF,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK;IACpC,CAAC,CAAC;IACFR,kBAAkB,CAACe,OAAO,CAAC;EAC7B,CAAC;EAED,MAAME,cAAc,GAAG,MAAMX,CAAiB,IAAI;IAChDA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,MAAMQ,MAAM,GAAG,MAAM5B,eAAe,CAACO,MAAM,CAAC;IAC5C,IAAG,OAAOqB,MAAM,IAAI,QAAQ,EAAC;MAC3Bd,cAAc,CAACc,MAAM,CAAC;IACxB,CAAC,MAAK,IAAGC,KAAK,CAACC,OAAO,CAACF,MAAM,CAACG,IAAI,CAAC,EAAC;MAClCnB,eAAe,CAACgB,MAAM,CAACG,IAAI,CAAC;IAC9B;EACF,CAAC;EACD,oBACE3B,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAET;AAACI,EAAA,CAtCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}