{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useOutletContext } from 'react-router';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = [{\n  label: \"Date\",\n  render: company => company.date\n}, {\n  label: \"Operating Cashflow\",\n  render: company => company.operatingCashFlow\n}, {\n  label: \"Investing Cashflow\",\n  render: company => company.netCashUsedForInvestingActivites\n}, {\n  label: \"Financing Cashflow\",\n  render: company => company.netCashUsedProvidedByFinancingActivities\n}, {\n  label: \"Cash At End of Period\",\n  render: company => company.cashAtEndOfPeriod\n}, {\n  label: \"CapEX\",\n  render: company => company.capitalExpenditure\n}, {\n  label: \"Issuance Of Stock\",\n  render: company => company.commonStockIssued\n}, {\n  label: \"Free Cash Flow\",\n  render: company => company.freeCashFlow\n}];\nconst CashFlowStatement = props => {\n  _s();\n  const ticker = useOutletContext();\n  const [cashFlowData, setCashFlow] = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(CashFlowStatement, \"7mJ7g7XQo8zpLOwJTt1by58Wsa8=\", false, function () {\n  return [useOutletContext];\n});\n_c = CashFlowStatement;\nexport default CashFlowStatement;\nvar _c;\n$RefreshReg$(_c, \"CashFlowStatement\");","map":{"version":3,"names":["React","useState","useOutletContext","Fragment","_Fragment","jsxDEV","_jsxDEV","config","label","render","company","date","operatingCashFlow","netCashUsedForInvestingActivites","netCashUsedProvidedByFinancingActivities","cashAtEndOfPeriod","capitalExpenditure","commonStockIssued","freeCashFlow","CashFlowStatement","props","_s","ticker","cashFlowData","setCashFlow","_c","$RefreshReg$"],"sources":["/home/alek/react-net/frontend/src/Components/CashFlowStatement/CashFlowStatement.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { CompanyCashFlow } from '../../company';\nimport { useOutletContext } from 'react-router';\n\ntype Props = {}\n\nconst config = [\n  {\n    label: \"Date\",\n    render: (company: CompanyCashFlow) => company.date,\n  },\n  {\n    label: \"Operating Cashflow\",\n    render: (company: CompanyCashFlow) => company.operatingCashFlow,\n  },\n  {\n    label: \"Investing Cashflow\",\n    render: (company: CompanyCashFlow) =>\n      company.netCashUsedForInvestingActivites,\n  },\n  {\n    label: \"Financing Cashflow\",\n    render: (company: CompanyCashFlow) =>\n      company.netCashUsedProvidedByFinancingActivities,\n  },\n  {\n    label: \"Cash At End of Period\",\n    render: (company: CompanyCashFlow) => company.cashAtEndOfPeriod,\n  },\n  {\n    label: \"CapEX\",\n    render: (company: CompanyCashFlow) => company.capitalExpenditure,\n  },\n  {\n    label: \"Issuance Of Stock\",\n    render: (company: CompanyCashFlow) => company.commonStockIssued,\n  },\n  {\n    label: \"Free Cash Flow\",\n    render: (company: CompanyCashFlow) => company.freeCashFlow,\n  },\n];\n\nconst CashFlowStatement = (props: Props) => {\n  const ticker = useOutletContext<string>();\n  const [cashFlowData, setCashFlow] = useState<CompanyCashFlow>();\n  \n  return <></>;\n\n}\n\nexport default CashFlowStatement"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,gBAAgB,QAAQ,cAAc;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAIhD,MAAMC,MAAM,GAAG,CACb;EACEC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACC;AAChD,CAAC,EACD;EACEH,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACE;AAChD,CAAC,EACD;EACEJ,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAC/BA,OAAO,CAACG;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAC/BA,OAAO,CAACI;AACZ,CAAC,EACD;EACEN,KAAK,EAAE,uBAAuB;EAC9BC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACK;AAChD,CAAC,EACD;EACEP,KAAK,EAAE,OAAO;EACdC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACM;AAChD,CAAC,EACD;EACER,KAAK,EAAE,mBAAmB;EAC1BC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACO;AAChD,CAAC,EACD;EACET,KAAK,EAAE,gBAAgB;EACvBC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACQ;AAChD,CAAC,CACF;AAED,MAAMC,iBAAiB,GAAIC,KAAY,IAAK;EAAAC,EAAA;EAC1C,MAAMC,MAAM,GAAGpB,gBAAgB,CAAS,CAAC;EACzC,MAAM,CAACqB,YAAY,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAkB,CAAC;EAE/D,oBAAOK,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAEd,CAAC;AAAAiB,EAAA,CANKF,iBAAiB;EAAA,QACNjB,gBAAgB;AAAA;AAAAuB,EAAA,GAD3BN,iBAAiB;AAQvB,eAAeA,iBAAiB;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}