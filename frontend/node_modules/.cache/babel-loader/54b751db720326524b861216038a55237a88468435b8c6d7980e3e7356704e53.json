{"ast":null,"code":"var _jsxFileName = \"/home/alek/react-net/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport CardList from './Components/CardList/CardList';\nimport Search from './Components/Search/Search';\nimport { searchCompanies } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [serverError, setServerError] = useState(\"\");\n  const handleChange = e => {\n    setSearch(e.target.value);\n    console.log(e);\n  };\n  const onPortfolioCreate = e => {\n    e.preventDefault();\n    console.log(e);\n  };\n  const onClick = async e => {\n    const result = await searchCompanies(search);\n    if (typeof result == \"string\") {\n      setServerError(result);\n    } else if (Array.isArray(result.data)) {\n      setSearchResult(result.data);\n    }\n    console.log(searchResult);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchSu: onClick,\n      search: search,\n      handleSearchChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), serverError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: serverError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      searchResults: searchResult,\n      onPortfolioCreate: onPortfolioCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gVqVLghT7yhaT/SFrqA4sN+rUtU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","CardList","Search","searchCompanies","jsxDEV","_jsxDEV","App","_s","search","setSearch","searchResult","setSearchResult","serverError","setServerError","handleChange","e","target","value","console","log","onPortfolioCreate","preventDefault","onClick","result","Array","isArray","data","className","children","onSearchSu","handleSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","searchResults","_c","$RefreshReg$"],"sources":["/home/alek/react-net/frontend/src/App.tsx"],"sourcesContent":["import { ChangeEvent, SyntheticEvent, useState } from 'react';\nimport './App.css';\nimport CardList from './Components/CardList/CardList';\nimport Search from './Components/Search/Search';\nimport { CompanySearch } from './company';\nimport { searchCompanies } from './api';\nimport { Console } from 'console';\n\nfunction App() {\n  const[search, setSearch] = useState<string>(\"\");\n  const[searchResult, setSearchResult] = useState<CompanySearch[]>([]);\n  const[serverError, setServerError] = useState<string>(\"\");\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value)\n    console.log(e)\n  };\n\n  const onPortfolioCreate = (e: SyntheticEvent) => {\n    e.preventDefault()\n    console.log(e)\n  }\n\n  const onClick = async(e: SyntheticEvent) =>{\n    const result = await searchCompanies(search);\n    if(typeof result == \"string\"){\n      setServerError(result);\n    }else if(Array.isArray(result.data)){\n      setSearchResult(result.data);\n    }\n    console.log(searchResult);\n  };\n  return (\n    <div className=\"App\">\n      <Search onSearchSu={onClick} search={search} handleSearchChange={handleChange}/>\n      {serverError && <h1>{serverError}</h1>}\n      <CardList searchResults={searchResult} onPortfolioCreate={onPortfolioCreate}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAsCA,QAAQ,QAAQ,OAAO;AAC7D,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,MAAM,MAAM,4BAA4B;AAE/C,SAASC,eAAe,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC/C,MAAK,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAkB,EAAE,CAAC;EACpE,MAAK,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAEzD,MAAMc,YAAY,GAAIC,CAAgC,IAAK;IACzDN,SAAS,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACzBC,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;EAChB,CAAC;EAED,MAAMK,iBAAiB,GAAIL,CAAiB,IAAK;IAC/CA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClBH,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;EAChB,CAAC;EAED,MAAMO,OAAO,GAAG,MAAMP,CAAiB,IAAI;IACzC,MAAMQ,MAAM,GAAG,MAAMpB,eAAe,CAACK,MAAM,CAAC;IAC5C,IAAG,OAAOe,MAAM,IAAI,QAAQ,EAAC;MAC3BV,cAAc,CAACU,MAAM,CAAC;IACxB,CAAC,MAAK,IAAGC,KAAK,CAACC,OAAO,CAACF,MAAM,CAACG,IAAI,CAAC,EAAC;MAClCf,eAAe,CAACY,MAAM,CAACG,IAAI,CAAC;IAC9B;IACAR,OAAO,CAACC,GAAG,CAACT,YAAY,CAAC;EAC3B,CAAC;EACD,oBACEL,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA,CAACH,MAAM;MAAC2B,UAAU,EAAEP,OAAQ;MAACd,MAAM,EAAEA,MAAO;MAACsB,kBAAkB,EAAEhB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAC/EtB,WAAW,iBAAIP,OAAA;MAAAuB,QAAA,EAAKhB;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtC7B,OAAA,CAACJ,QAAQ;MAACkC,aAAa,EAAEzB,YAAa;MAACU,iBAAiB,EAAEA;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV;AAAC3B,EAAA,CA/BQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}